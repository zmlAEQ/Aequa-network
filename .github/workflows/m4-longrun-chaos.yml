name: m4-longrun-chaos

on:
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: m4-longrun-chaos-${{ github.ref }}
  cancel-in-progress: false

env:
  GO_VERSION: '1.24'
  CHUNK_MIN: '300'

jobs:
  chaos-e2e-c1:
    name: chaos-e2e chunk 1/4 (5h, qbft+p2p)
    runs-on: ubuntu-latest
    timeout-minutes: 330
    concurrency:
      group: chaos-global
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v4
      - name: Prepare compose
        run: |
          if docker compose version >/dev/null 2>&1; then echo DOCKER_COMPOSE="docker compose" >> $GITHUB_ENV; else sudo apt-get update -y && sudo apt-get install -y docker-compose && echo DOCKER_COMPOSE="docker-compose" >> $GITHUB_ENV; fi
      - name: Build e2e + attacker images
        run: |
          docker build --build-arg BUILD_TAGS=e2e -t aequa-local:latest .
          docker build -f Dockerfile.attacker -t aequa-attacker:latest .
      - name: Up cluster with attacker (compose)
        run: ${{ env.DOCKER_COMPOSE }} up --build -d
      - name: Warm-up metrics (wait up to 90s)
        shell: bash
        run: |
          for i in 0 1 2 3; do \
            for t in {1..9}; do \
              if curl -fsS localhost:$((4620+i))/metrics >/dev/null; then echo "node $i metrics ok"; break; else echo "waiting metrics on node $i ($t/9)"; sleep 10; fi; \
            done; \
          done
      - name: Probe + netem + churn (chunk)
        shell: bash
        run: |
          minutes=${CHUNK_MIN}
          end=$(( $(date +%s) + minutes*60 ))
          bash ./.github/scripts/netem.sh init
          : > chaos-e2e-c1.out
          while [ $(date +%s) -lt $end ]; do
            for i in 0 1 2 3; do curl -fsS localhost:$((4620+i))>/dev/null || echo "metrics fail on node $i" | tee -a chaos-e2e-c1.out; done
            bash ./.github/scripts/netem.sh random_tick
            n=$((RANDOM % 4)); ${{ env.DOCKER_COMPOSE }} restart aequa-node-$n || true
            sleep 10
          done
      - name: Collect logs & down
        if: always()
        run: |
          for c in aequa-node-0 aequa-node-1 aequa-node-2 aequa-node-3 adversary-agent; do docker logs $c --since 5h || true; done | tee chaos-e2e-c1.out
          ${{ env.DOCKER_COMPOSE }} down -v || true
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: chaos-e2e-c1-logs
          path: chaos-e2e-c1.out

  chaos-e2e-c2:
    name: chaos-e2e chunk 2/4 (5h, qbft+p2p)
    runs-on: ubuntu-latest
    needs: [chaos-e2e-c1]
    timeout-minutes: 330
    concurrency:
      group: chaos-global
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v4
      - run: |
          if docker compose version >/dev/null 2>&1; then echo DOCKER_COMPOSE="docker compose" >> $GITHUB_ENV; else sudo apt-get update -y && sudo apt-get install -y docker-compose && echo DOCKER_COMPOSE="docker-compose" >> $GITHUB_ENV; fi
      - run: docker build --build-arg BUILD_TAGS=e2e -t aequa-local:latest .
      - run: docker build -f Dockerfile.attacker -t aequa-attacker:latest .
      - run: ${{ env.DOCKER_COMPOSE }} up --build -d
      - name: Probe + netem + churn (chunk)
        run: |
          minutes=${CHUNK_MIN}; end=$(( $(date +%s) + minutes*60 )); : > chaos-e2e-c2.out; bash ./.github/scripts/netem.sh init; while [ $(date +%s) -lt $end ]; do for i in 0 1 2 3; do curl -fsS localhost:$((4620+i))>/dev/null || echo "metrics fail on node $i" | tee -a chaos-e2e-c2.out; done; bash ./.github/scripts/netem.sh random_tick; n=$((RANDOM % 4)); ${{ env.DOCKER_COMPOSE }} restart aequa-node-$n || true; sleep 10; done
      - name: Collect logs & down
        if: always()
        run: |
          for c in aequa-node-0 aequa-node-1 aequa-node-2 aequa-node-3 adversary-agent; do docker logs $c --since 5h || true; done | tee chaos-e2e-c2.out
          ${{ env.DOCKER_COMPOSE }} down -v || true
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: chaos-e2e-c2-logs
          path: chaos-e2e-c2.out

  chaos-e2e-c3:
    name: chaos-e2e chunk 3/4 (5h, qbft+p2p)
    runs-on: ubuntu-latest
    needs: [chaos-e2e-c2]
    timeout-minutes: 330
    concurrency:
      group: chaos-global
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v4
      - run: |
          if docker compose version >/dev/null 2>&1; then echo DOCKER_COMPOSE="docker compose" >> $GITHUB_ENV; else sudo apt-get update -y && sudo apt-get install -y docker-compose && echo DOCKER_COMPOSE="docker-compose" >> $GITHUB_ENV; fi
      - run: docker build --build-arg BUILD_TAGS=e2e -t aequa-local:latest .
      - run: docker build -f Dockerfile.attacker -t aequa-attacker:latest .
      - run: ${{ env.DOCKER_COMPOSE }} up --build -d
      - name: Probe + netem + churn (chunk)
        run: |
          minutes=${CHUNK_MIN}; end=$(( $(date +%s) -lt $end )); : > chaos-e2e-c3.out; bash ./.github/scripts/netem.sh init; while [ $(date +%s) -lt $end ]; do for i in 0 1 2 3; do curl -fsS localhost:$((4620+i))>/dev/null || echo "metrics fail on node $i" | tee -a chaos-e2e-c3.out; done; bash ./.github/scripts/netem.sh random_tick; n=$((RANDOM % 4)); ${{ env.DOCKER_COMPOSE }} restart aequa-node-$n || true; sleep 10; done
      - name: Collect logs & down
        if: always()
        run: |
          for c in aequa-node-0 aequa-node-1 aequa-node-2 aequa-node-3 adversary-agent; do docker logs $c --since 5h || true; done | tee chaos-e2e-c3.out
          ${{ env.DOCKER_COMPOSE }} down -v || true
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: chaos-e2e-c3-logs
          path: chaos-e2e-c3.out

  chaos-e2e-c4:
    name: chaos-e2e chunk 4/4 (5h, qbft+p2p)
    runs-on: ubuntu-latest
    needs: [chaos-e2e-c3]
    timeout-minutes: 330
    concurrency:
      group: chaos-global
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v4
      - run: |
          if docker compose version >/dev/null 2>&1; then echo DOCKER_COMPOSE="docker compose" >> $GITHUB_ENV; else sudo apt-get update -y && sudo apt-get install -y docker-compose && echo DOCKER_COMPOSE="docker-compose" >> $GITHUB_ENV; fi
      - run: docker build --build-arg BUILD_TAGS=e2e -t aequa-local:latest .
      - run: docker build -f Dockerfile.attacker -t aequa-attacker:latest .
      - run: ${{ env.DOCKER_COMPOSE }} up --build -d
      - name: Probe + netem + churn (chunk)
        run: |
          minutes=${CHUNK_MIN}; end=$(( $(date +%s) + minutes*60 )); : > chaos-e2e-c4.out; bash ./.github/scripts/netem.sh init; while [ $(date +%s) -lt $end ]; do for i in 0 1 2 3; do curl -fsS localhost:$((4620+i))>/dev/null || echo "metrics fail on node $i" | tee -a chaos-e2e-c4.out; done; bash ./.github/scripts/netem.sh random_tick; n=$((RANDOM % 4)); ${{ env.DOCKER_COMPOSE }} restart aequa-node-$n || true; sleep 10; done
      - name: Collect logs & down
        if: always()
        run: |
          for c in aequa-node-0 aequa-node-1 aequa-node-2 aequa-node-3 adversary-agent; do docker logs $c --since 5h || true; done | tee chaos-e2e-c4.out
          ${{ env.DOCKER_COMPOSE }} down -v || true
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: chaos-e2e-c4-logs
          path: chaos-e2e-c4.out

  aggregate:
    name: aggregate-report
    runs-on: ubuntu-latest
    needs: [chaos-e2e-c4]
    if: always()
    steps:
      - name: Build summary
        run: |
          echo "# M4 Chaos (qbft+p2p+netem) Long-run 4Ã—5h" >> $GITHUB_STEP_SUMMARY
          echo "\nLogs include nodes + adversary; netem toggled periodically." >> $GITHUB_STEP_SUMMARY
